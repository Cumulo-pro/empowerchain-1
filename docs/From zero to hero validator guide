<h3 id="instalation">🛠 Manual installation</h3>
  <h4>Updating packages & installing dependencies</h4>
  <pre>sudo apt update && sudo apt upgrade -y<br>
  sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential git make ncdu -y</pre>
  
  <h4>Install go</h4>
  <pre><span class="color">cd $HOME</span>
  VER="1.20.4"
  <span class="color">wget</span> "https://golang.org/dl/go$VER.linux-amd64.tar.gz"
  <span class="color">sudo tar</span> -C /usr/local -xzf "go$VER.linux-amd64.tar.gz"
  <span class="color">sudo rm </span>-rf  "go$VER.linux-amd64.tar.gz"
  <span class="color">echo</span> "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile
  <span class="color">source</span> $HOME/.bash_profile
  #Check GO version
  <span class="color">go version</span></pre>
   
  <h3 id="binaries">Download and compile binaries</h4>
  <pre><span class="color">cd $HOME</span>
  <span class="color">sudo rm</span> -rf empowerchain
  <span class="color">git</span> clone https://github.com/EmpowerPlastic/empowerchain
  <span class="color">cd</span> empowerchain/chain
  <span class="color">git</span> checkout v1.0.0-rc2
  <span class="color">make install</span>
  #Check empowerd version
  empowerd version # v1.0.0-rc2</pre>
   
  <h3 id="configure">Configure and start the application</h3>
  <pre>empowerd config chain-id circulus-1
  empowerd init [MONIKER] --chain-id circulus-1</pre> 
   
  <h3>Download genesis</h3>
  <pre>
  curl -s https://raw.githubusercontent.com/EmpowerPlastic/empowerchain/main/testnets/circulus-1/genesis.json > $HOME/.empowerchain/config/genesis.json
  
  </pre>
   
  <h3>Set seeds</h3>
  <pre>
  SEEDS="258f523c96efde50d5fe0a9faeea8a3e83be22ca@seed.circulus-1.empower.aviaone.com:20272,<br>d6a7cd9fa2bafc0087cb606de1d6d71216695c25@51.159.161.174:26656,<br>babc3f3f7804933265ec9c40ad94f4da8e9e0017@testnet-seed.rhinostake.com:17456"
  sed -i -e "s\|^seeds *=.*\|seeds = \"$SEEDS\"\|" $HOME/.empowerchain/config/config.toml
  </pre>
    
  <h3>Configure pruning</h3>
  <pre>
  PRUNING="custom"
  PRUNING_KEEP_RECENT="100"
  PRUNING_INTERVAL="10"
    
  sed -i -e "s/^pruning *=.*/pruning = \"$PRUNING\"/" $HOME/.empowerchain/config/app.toml
  sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \
  \"$PRUNING_KEEP_RECENT\"/" $HOME/.empowerchain/config/app.toml
  sed -i -e "s/^pruning-interval *=.*/pruning-interval = \
  \"$PRUNING_INTERVAL\"/" $HOME/.empowerchain/config/app.toml</pre>
   
  <h3>Clean up old data</h3>
  <pre>empowerd tendermint unsafe-reset-all --home $HOME/.empowerchain --keep-addr-book</pre>
   
  <h3>🛎 Service with SystemD</h3>
  <p>Create the service file</p>
  <pre>
  sudo tee <<EOF >/dev/null /etc/systemd/system/empowerd.service
  [Unit]
  Description=empowerd Empower daemon
  After=network-online.target
  [Service]
  User=$USER
  ExecStart=$HOME/go/bin/empowerd start
  Restart=on-failure
  RestartSec=3
  LimitNOFILE=4096
  [Install]
  WantedBy=multi-user.target
  EOF
  </pre>
    
  <h4>Enable, start service and check logs</h4>
  <pre>
  sudo systemctl daemon-reload
  sudo systemctl enable empowerd
  sudo systemctl restart empowerd
  sudo journalctl -u empowerd -f</pre>
   
  <h3>🗝Wallet</h3>
    
  <h4>Create wallet</h4>
  <p>Don’t forget to save the mnemonic.</p>
   
  <pre>empowerd keys add wallet</pre>
  
  <h4>Restore wallet</h4>
  <pre>empowerd keys add wallet --recover</pre>
   
  <h4>Deposit funds into your wallet</h4>
  <p>Before creating a validator, you have to deposit funds in your wallet, go to the Empower  discord server and request them in the faucet channel.</p>
   
  <pre>$request [address wallet]</pre>
   
  <h3>📝Validator</h3>
   
  <h4>Create Empower validator</h4>
  <p>Before creating a validator, you should make sure that the node is synchronised and check the balance of your wallet.</p>
   
  <h5>Check synchronisation status</h5>
  <p>Once your node is fully synchronised, the output will read false.</p>
   
  <pre>empowerd status 2>&1 \| jq .SyncInfo</pre>
   
  <h5>Check your balance</h5>
  <pre>empowerd query bank balances $wallet_ADDRESS</pre>
    
  <h5>Create validator</h5>
  <pre>empowerd tx staking create-validator \
  --amount 1000000umpwr \
  --from $wallet \
  --commission-max-change-rate "0.01" \
  --commission-max-rate "0.2" \
  --commission-rate "0.05" \
  --min-self-delegation "1" \
  --pubkey  $(empowerd tendermint show-validator) \
  --moniker [MONIKER] \
  --chain-id $empowerd \
  --gas auto \
  --gas-adjustment 1.3 \
  --fees 10000umpwr </pre>
   
  <p>You can add the flags — website — security-contact — identity — details (optional)</p>
   
  <pre>--website <WEB_SITE_URL> \
  --security-contact <YOUR_CONTACT> \
  --identity <KEYBASE_IDENTITY> \
  --details <YOUR_VALIDATOR_DETAILS></pre>
   
  <h3>🎛 Monitoring</h3>
  <p>If you want to set up a monitoring and alerting system use our guide to monitoring Cosmos nodes with tenderduty.</p>
    
  <h3>🛎 SystemD commands</h3>
  <h4>Stop the service</h4>
  <pre>sudo systemctl stop empowerd</pre>
  <h4>Start service</h4>
  <pre>sudo systemctl start empowerd</pre>
  <h4>Restart service</h4>
  <pre>sudo systemctl restart empowerd</pre>
  <h4>Check logs</h4>
  <pre>sudo journalctl -u empowerd -f</pre>
  <h4>Check status</h4>
  <pre>sudo systemctl status empowerd</pre>
   
  <h3>📈 Node information</h3>
  <h4>Synchronization information</h4>
  <pre>empowerd status 2>&1 \| jq .SyncInfo</pre>
  <h4>Node information</h4>
  <pre>empowerd status 2>&1 \| jq .NodeInfo</pre>
  <h4>Validator information</h4>
  <pre>empowerd status 2>&1 \| jq .ValidatorInfo</pre>
  <h4>Get peers</h4>
  <pre>echo $(empowerd tendermint show-node-id)'@'$(curl -s ifconfig.me)':'$(cat $HOME/.empowerd/config/config.toml \| sed -n '/Address to listen for incoming connection/{n;p;}' \| sed 's/.*://; s/".*//')</pre>
   
  <h3>🔏 Wallet operation</h3>
  <h4>Check balance</h4>
  <pre>empowerd query bank balances $wallet_ADDRESS</pre>
  <h4>Wallet Key List</h4>
  <pre>empowerd keys list</pre>
  <h4>Create a new wallet</h4>
  <pre>empowerd keys add $wallet</pre>
  <h4>Wallet recovering</h4>
  <pre>empowerd keys add $wallet --recover</pre>
  <h4>Delete wallet</h4>
  <pre>empowerd keys delete $wallet</pre>
  <h4>Transfer funds</h4>
  <pre>empowerd tx bank send $wallet_ADDRESS <ANOTHER_wallet_ADDRESS> 800000000umpwr --gas auto --gas-adjustment 1.3</pre>
  
  <h3>💬 Governance</h3>
  <h4>List all proposals</h4>
  <pre>empowerd query gov proposals</pre>
  <h4>Vote YES</h4>
  <pre>empowerd tx gov vote 1 yes --from $wallet --chain-id $EMPOWER_CHAIN_ID --gas-adjustment 1.4 --gas auto -y</pre>
  <h4>Vote NO</h4>
  <pre>empowerd tx gov vote 1 no --from $wallet --chain-id $EMPOWER_CHAIN_ID --gas-adjustment 1.4 --gas auto -y</pre>
  <h4>Refrain</h4>
  <pre>empowerd tx gov vote 1 abstain --from $wallet --chain-id $EMPOWER_CHAIN_ID --gas-adjustment 1.4 --gas auto -y</pre>
    
  <h3>🚰 Staking, delegation and rewards</h3>
  <h4>Withdraw all rewards</h4>
  <pre>empowerd tx distribution withdraw-all-rewards --from $wallet --chain-id circulus-1 --gas auto --gas-adjustment 1.3</pre>
  <h4>Withdraw commission</h4>
  <pre>empowerd tx distribution withdraw-rewards $EMPOWER_VALOPER_ADDRESS --from $wallet --commission --fees 200umpwr</pre>
  <h4>Delegate Stake</h4>
  <pre>empowerd tx staking delegate $EMPOWER_VALOPER_ADDRESS 10000000utia --from $wallet --chain-id circulus-1 --gas=auto --gas-adjustment 1.3</pre>
   
  <h3>✔️ Validator operation</h3>
  <h4>Edit validator</h4>
  <pre>empowerd tx staking edit-validator \
  --moniker=$NODENAME \
  --identity=<keybase_id> \
  --website="<website>" \
  --details="<validator_description>" \
  --chain-id=$EMPOWER_CHAIN_ID \
  --from=$wallet  --fees=200utia</pre>
    
  <h3>Validator information</h3>
  <pre>empowerd status 2>&1 \| jq .ValidatorInfo</pre>
  <h4>Jailing information</h4>
  <pre>empowerd q slashing signing-info $(empowerd tendermint show-validator)</pre>
  <h4>Validator unjailing</h4>
  <pre>empowerd tx slashing unjail --broadcast-mode=block --from $wallet --chain-id $EMPOWER_CHAIN_ID --gas auto --gas-adjustment 1.5</pre>
   
  <h3>🗑 Delete node</h3>
  <pre>sudo systemctl stop empowerdsudo systemctl disable empowerdsudo rm -rf /etc/systemd/system/empowerd*
  sudo systemctl daemon-reload
  sudo rm $(which empowerd)
  sudo rm -rf $HOME/.empowerd</pre>

